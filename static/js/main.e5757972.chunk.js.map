{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","errors","htmlFor","classnames","defaultProps","AddContact","e","target","onSubmit","preventDefault","newContact","post","history","push","text","EditContact","updContact","match","params","put","Header","branding","href","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5757972.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext()\r\n\r\nconst reducer = (state, action) => {                                // changes state based on the action type it receives\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT': \r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => \r\n                    contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({contacts: res.data})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Consumer} from '../../context'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}{' '}\r\n                                <i onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })} className=\"fas fa-sort-down\" style={{cursor: \"pointer\"}}/>\r\n                                <i className=\"fas fa-times\" style={{cursor: \"pointer\", float: \"right\", color:\"red\"}} onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\r\n                                <Link to={`contact/edit/${id}`} >\r\n                                    <i className=\"fas fa-edit\" style={{cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}}></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email: {email}</li>\r\n                                <li className=\"list-group-item\">Phone: {phone}</li>\r\n                            </ul>) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\n\r\nimport {Consumer} from '../../context'\r\n\r\nclass Contacts extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )        \r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label, name, value, placeholder, type, onChange, errors\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} className={classnames(\r\n                'form-control from-control-lg', {'is-invalid': errors}\r\n            )} placeholder={placeholder} name={name} value={value} onChange={onChange}/>\r\n            {errors && <div className=\"invalid-feedback\">{errors}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    errors: PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state\r\n\r\n        if(name === '') {\r\n            this.setState({\r\n                errors: {name: 'Name is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({\r\n                errors: {email: 'Email is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({\r\n                errors: {phone: 'Phone is required'}\r\n            })\r\n            return\r\n        }\r\n        \r\n        const newContact = {\r\n            name, email, phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        text=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        const contact = res.data\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state\r\n\r\n        if(name === '') {\r\n            this.setState({\r\n                errors: {name: 'Name is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({\r\n                errors: {email: 'Email is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({\r\n                errors: {phone: 'Phone is required'}\r\n            })\r\n            return\r\n        }\r\n\r\n        const updContact = {\r\n            name, email, phone\r\n        }\r\n\r\n        const { id } = this.props.match.params\r\n        \r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        text=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Edit Contact\" className=\"btn btn-light btn-block\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact\r\n","import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i>\r\n                                Home\r\n                            </Link>\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i>\r\n                                Add\r\n                            </Link>\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i>\r\n                                About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default props => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404 Page Not Found</span></h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = [{\r\n        title: '',\r\n        body: ''\r\n    }]\r\n    \r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/4')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { title, body } = this.state\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n","import Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport Header from './components/layout/Header'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\nimport Test from './components/test/Test'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport {Provider} from './context'\nimport { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/test\" component={Test} />\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}